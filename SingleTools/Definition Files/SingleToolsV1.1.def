BootStrap: docker
From: ubuntu:20.04

#Copy needed env files into the machine
%files 
    ./EnvPack/renv.lock /opt/
    ./EnvPack/gitCredsHelper.sh /opt/

#Commands to run
%post
    TZ=Europe/Berlin
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    apt update -y && apt upgrade -y
    apt install -y wget build-essential git curl procps git 
    apt install -y software-properties-common
    add-apt-repository universe

    apt-get install -y libgsl-dev libglpk-dev libxml2-dev libhdf5-dev default-jre default-jdk
    apt-get install -y python3 python3-venv python3-pip python3-dev
    apt-get install -y bzip2 tabix
    #apt install ......
   

    #Allow PIP to modyfy system packages
    export PIP_BREAK_SYSTEM_PACKAGES=1

    pip install --no-cache-dir jupyterlab jupyterlab-git leidenalg jupyterlab-quarto numpy scanpy MACS2 MACS3 mgatk cellbender scarches scanpy cellphonedb 
    pip install --no-cache-dir velocyto

    #Add python package path
    export PATH=/usr/local/lib/python3.8/dist-packages:$PATH

    mkdir /workspace
    ls /opt/renv.lock
 

    ################
    #Set Git credentials
    ################

    echo "Setting up GitHub PAT for devtools"

    bash /opt/gitCredsHelper.sh

    #######################
    #Install R
    #######################

    # Software versions
    export R_VERSION=4.4
    echo "export R_VERSION=${R_VERSION}" >> $SINGULARITY_ENVIRONMENT
    # Install R
    apt-get update
    apt-get install -y --no-install-recommends \
      software-properties-common \
      dirmngr \
      wget
    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | \
      tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
    add-apt-repository \
      "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
    apt-get update
    apt-get upgrade
    apt-get install -y \
      r-base=${R_VERSION}* \
      r-base-core=${R_VERSION}* \
      r-base-dev=${R_VERSION}* \
      r-recommended=${R_VERSION}* \
      r-base-html=${R_VERSION}* \
      r-doc-html=${R_VERSION}* \
      libcurl4-openssl-dev \
      libssl-dev \
      libxml2-dev \
      libcairo2-dev \
      libxt-dev \
      libopenblas-dev 

    # Add a default CRAN mirror
    echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/lib/R/etc/Rprofile.site

    # Add a directory for host R libraries
    #mkdir -p /library
    #echo "R_LIBS_SITE=/library:\${R_LIBS_SITE}" >> /usr/lib/R/etc/Renviron.site


    #install Packages
# Install R packages for Jupyter integration
    R -e "install.packages(c('IRkernel', 'IRdisplay'), repos='https://cloud.r-project.org/')"

    # Set up IRkernel to make R available as a Jupyter kernel
    R -e "IRkernel::installspec(user = FALSE)"

    #Install R library
    R --quiet --slave -e 'install.packages("renv", lib= "/usr/lib/R/library/",repos="https://cloud.r-project.org/")' 
    R --quiet --slave -e 'install.packages("BiocManager",lib= "/usr/lib/R/library/",repos="https://cloud.r-project.org/")'
    R --quiet --slave -e 'install.packages("devtools",lib= "/usr/lib/R/library/",repos="https://cloud.r-project.org/")'

    #R --quiet --slave -e 'Sys.setenv(GITHUB_PAT = Sys.getenv('$KEY'))''

    R -e 'BiocManager::install("Rhdf5lib", library = "/usr/lib/R/library/")'
    R -e 'BiocManager::install("rhdf5", library = "/usr/lib/R/library/")'
    R -e 'BiocManager::install("chromVAR", library = "/usr/lib/R/library/")'
    R -e 'BiocManager::install("leiden", library = "/usr/lib/R/library/")'


# check iof the file has been copied...
if [ -f /opt/renv.lock ]; then
    R -e 'renv::restore(lockfile = "/opt/renv.lock", library = "/usr/lib/R/library/")'
else
    echo "ERROR: /opt/renv.lock not found. Aborting setup." >&2
    exit 1
fi


    R -e 'devtools::install_github("zktuong/ktplots", dependencies = TRUE)'
    R -e 'devtools::install_github("omarwagih/ggseqlogo")'
    
    # Clean up
    rm -rf /var/lib/apt/lists/*


%runscript
    jupyter lab --port 3333 --ip=0.0.0.0 --allow-root --no-browser

%environment
    #PATH=/opt/mamba24/bin:$PATH
    export PATH="/usr/local/bin:$PATH"
    export PIP_BREAK_SYSTEM_PACKAGES=1

%labels
    Author: David Hidalgo
    Version 1.0